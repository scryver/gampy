#include "sampling.glslh"

float CalcShadowAmount(sampler2D shadowMap, vec4 initShadowMapCoords)
{
    vec3 shadowMapCoords = (initShadowMapCoords.xyz / initShadowMapCoords.w);
    return SampleShadowMapLinear(shadowMap, shadowMapCoords.xy, shadowMapCoords.z - R_shadowBias, R_shadowTexelSize.xy);
}

void main()
{
    vec3 directionToEye = normalize(C_eyePosition - worldPosition0);
    vec2 texCoords = CalcParallaxTexCoords(dispMap, tbnMatrix, directionToEye, texCoord0, dispMapScale, dispMapBias);

    // 255/128 to make 128 the absolute zero, otherwise the up is never straight
    vec3 normal = normalize(tbnMatrix * (255.0/128.0 * texture2D(normalMap, texCoords).xyz - 1));

    vec4 lightingAmt = CalcLightingEffect(normal, worldPosition0) * CalcShadowAmount(R_shadowMap, shadowMapCoords0);
    gl_FragColor = texture2D(diffuse, texCoords) * lightingAmt;
}